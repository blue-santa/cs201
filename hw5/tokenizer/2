/**
 * tokenizerMain.cpp
 * CS 201
 * Bryan Beus
 * October 12, 2019
 * The main file for the tokenizer project
 */

#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

#include "tokenizer.hpp"

using std::cout;
using std::cin;
using std::endl;
using std::vector;
using std::string;
using std::noskipws;
using std::getline;

bool ReadLine(string& str) { 
    getline(cin, str);

    if (cin.fail()) {
        cin.clear();
        cin.ignore(1000, '\n');
    } else if (!cin || str == "") {
        return false; 
    } else {
        return true;
    }


}

unsigned StringToTokenWS(vector<string> &tokens) {

    

    size_t tokenSize = tokens.size();

    if (tokens.size() <= sizeof(unsigned)) {
        tokenSize = static_cast<unsigned>(tokenSize);
    }

    return tokenSize; 
}

int main(int argc, char **argv) {

    string str;

    while (true) {
        cout << "Please type text. When you are done, type any variation of \"End\": " << endl;
        bool res = ReadLine(str);

        if (res =

    }

    return 0;
}

